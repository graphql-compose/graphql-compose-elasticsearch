// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AGGS args converter Aggs DSL 1`] = `
"\\"\\"\\"Provides default value for input field.\\"\\"\\"
directive @default(value: JSON!) on INPUT_FIELD_DEFINITION

\\"\\"\\"
The aggregations framework helps provide aggregated data based on a search
query. It is based on simple building blocks called aggregations, that can be
composed in order to build complex summaries of the data. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations.html) 
\\"\\"\\"
input Elastic_AggBlock_50 {
  \\"\\"\\"FieldName in response for aggregation result\\"\\"\\"
  key: String

  \\"\\"\\"Aggregation rules\\"\\"\\"
  value: Elastic_AggRules_50
}

\\"\\"\\"
The aggregations framework helps provide aggregated data based on a search
query. It is based on simple building blocks called aggregations, that can be
composed in order to build complex summaries of the data. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations.html) 
\\"\\"\\"
input Elastic_AggRules_50 {
  avg: Elastic_AggsAvg_50
  cardinality: Elastic_AggsCardinality_50
  extended_stats: Elastic_AggsExtendedStats_50
  geo_bounds: Elastic_AggsGeoBounds_50
  geo_centroid: Elastic_AggsGeoCentroid_50
  max: Elastic_AggsMax_50
  min: Elastic_AggsMin_50
  percentile_ranks: Elastic_AggsPercentileRanks_50
  percentiles: Elastic_AggsPercentiles_50
  scripted_metric: Elastic_AggsScriptedMetric_50
  stats: Elastic_AggsStats_50
  sum: Elastic_AggsSum_50
  top_hits: Elastic_AggsTopHits_50
  value_count: Elastic_AggsValueCount_50
  children: Elastic_AggsChildren_50
  date_histogram: Elastic_AggsDateHistogram_50
  date_range: Elastic_AggsDateRange_50
  diversified_sampler: Elastic_AggsDiversifiedSampler_50
  filter: Elastic_Query_50
  filters: Elastic_AggsFilters_50
  geo_distance: Elastic_AggsGeoDistance_50
  geohash_grid: Elastic_AggsGeohashGrid_50
  global: Elastic_AggsGlobal_50
  histogram: Elastic_AggsHistogram_50
  ip_range: Elastic_AggsIpRange_50
  missing: Elastic_AggsMissing_50
  nested: Elastic_AggsNested_50
  range: Elastic_AggsRange_50
  reverse_nested: Elastic_AggsReverseNested_50
  sampler: Elastic_AggsSampler_50
  significant_terms: Elastic_AggsSignificantTerms_50
  terms: Elastic_AggsTerms_50
  avg_bucket: Elastic_AggsAvgBucket_50
  bucket_script: Elastic_AggsBucketScript_50
  bucket_selector: Elastic_AggsBucketSelector_50
  cumulative_sum: Elastic_AggsCumulativeSum_50
  derivative: Elastic_AggsDerivative_50
  extended_stats_bucket: Elastic_AggsExtendedStatsBucket_50
  max_bucket: Elastic_AggsMaxBucket_50
  min_bucket: Elastic_AggsMinBucket_50
  moving_average: Elastic_AggsMovingAverage_50
  percentiles_bucket: Elastic_AggsPercentilesBucket_50
  serial_differencing: Elastic_AggsSerialDifferencing_50
  stats_bucket: Elastic_AggsStatsBucket_50
  sum_bucket: Elastic_AggsSumBucket_50

  \\"\\"\\"Aggregation block\\"\\"\\"
  aggs: [Elastic_AggBlock_50]
}

\\"\\"\\"
A single-value metrics aggregation that computes the average of numeric values
that are extracted from the aggregated documents. These values can be extracted
either from specific numeric fields in the documents, or be generated by a
provided script. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-avg-aggregation.html) 
\\"\\"\\"
input Elastic_AggsAvg_50 {
  field: String
  missing: Float
  script: Elastic_CommonsScript_50
}

\\"\\"\\"
A sibling pipeline aggregation which calculates the (mean) average value of a
specified metric in a sibling aggregation. The specified metric must be numeric
and the sibling aggregation must be a multi-bucket aggregation. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-avg-bucket-aggregation.html) 
\\"\\"\\"
input Elastic_AggsAvgBucket_50 {
  buckets_path: String!
  gap_policy: String
  format: String
}

\\"\\"\\"
A parent pipeline aggregation which executes a script which can perform per
bucket computations on specified metrics in the parent multi-bucket aggregation.
The specified metric must be numeric and the script must return a numeric value. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-bucket-script-aggregation.html) 
\\"\\"\\"
input Elastic_AggsBucketScript_50 {
  buckets_path: JSON!
  script: String!
  format: String
  gap_policy: String
}

\\"\\"\\"
A parent pipeline aggregation which executes a script which determines whether
the current bucket will be retained in the parent multi-bucket aggregation. The
specified metric must be numeric and the script must return a boolean value. If
the script language is expression then a numeric return value is permitted. In
this case 0.0 will be evaluated as false and all other values will evaluate to true. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-bucket-selector-aggregation.html) 
\\"\\"\\"
input Elastic_AggsBucketSelector_50 {
  buckets_path: JSON!
  script: String!
  gap_policy: String
}

\\"\\"\\"
A single-value metrics aggregation that calculates an approximate count of
distinct values. Values can be extracted either from specific fields in the
document or generated by a script. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-cardinality-aggregation.html) 
\\"\\"\\"
input Elastic_AggsCardinality_50 {
  field: String

  \\"\\"\\"
  Allows to trade memory for accuracy, and defines a unique count below which counts are expected to be close to accurate. 
  \\"\\"\\"
  precision_threshold: Int = 3000
  missing: String
  script: Elastic_CommonsScript_50
}

\\"\\"\\"
A special single bucket aggregation that enables aggregating from buckets on
parent document types to buckets on child documents. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-children-aggregation.html) 
\\"\\"\\"
input Elastic_AggsChildren_50 {
  type: String
}

\\"\\"\\"
A parent pipeline aggregation which calculates the cumulative sum of a specified
metric in a parent histogram (or date_histogram) aggregation. The specified
metric must be numeric and the enclosing histogram must have min_doc_count set
to 0 (default for histogram aggregations). [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-cumulative-sum-aggregation.html) 
\\"\\"\\"
input Elastic_AggsCumulativeSum_50 {
  buckets_path: String!
  format: String
}

\\"\\"\\"
A multi-bucket aggregation similar to the histogram except it can only be
applied on date values. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-datehistogram-aggregation.html) 
\\"\\"\\"
input Elastic_AggsDateHistogram_50 {
  field: String

  \\"\\"\\"
  Available expressions for interval: year, quarter, month, week, day, hour,
  minute, second. Or time units, like 2d for 2 days. h, m, s, ms, micros, nanos. 
  \\"\\"\\"
  interval: String

  \\"\\"\\"
  Time zones may either be specified as an ISO 8601 UTC offset (e.g. +01:00 or
  -08:00) or as one of the time zone ids from the [TZ
  database](http://www.joda.org/joda-time/timezones.html). 
  \\"\\"\\"
  time_zone: String

  \\"\\"\\"
  Available expressions for interval: year, quarter, month, week, day, hour,
  minute, second. Or time units, like 2d for 2 days. h, m, s, ms, micros, nanos. 
  \\"\\"\\"
  offset: String

  \\"\\"\\"
  Date Format/Patter. Eg \\"MM-yyy\\" returns \\"08-2012\\". [JodaDate](http://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html) 
  \\"\\"\\"
  format: String
  missing: String
  script: Elastic_CommonsScript_50
}

\\"\\"\\"
A range aggregation that is dedicated for date values. The \`from\` and \`to\`
values can be expressed in Date Math expressions, and it is also possible to
specify a date format by which the from and to response fields will be returned.
Note that this aggregation includes the \`from\` value and excludes the \`to\` value
for each range. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-daterange-aggregation.html) 
\\"\\"\\"
input Elastic_AggsDateRange_50 {
  field: String

  \\"\\"\\"
  Date Format/Patter. Eg \\"MM-yyy\\" returns \\"08-2012\\". [JodaDate](http://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html) 
  \\"\\"\\"
  format: String
  ranges: [Elastic_DateRange_50]

  \\"\\"\\"
  Time zones may either be specified as an ISO 8601 UTC offset (e.g. +01:00 or
  -08:00) or as one of the time zone ids from the [TZ
  database](http://www.joda.org/joda-time/timezones.html). 
  \\"\\"\\"
  time_zone: String
}

\\"\\"\\"
A parent pipeline aggregation which calculates the derivative of a specified
metric in a parent histogram (or date_histogram) aggregation. The specified
metric must be numeric and the enclosing histogram must have min_doc_count set
to 0 (default for histogram aggregations). [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-derivative-aggregation.html) 
\\"\\"\\"
input Elastic_AggsDerivative_50 {
  buckets_path: String!
  gap_policy: String
  format: String
  unit: String
}

\\"\\"\\"
A filtering aggregation used to limit any sub aggregations' processing to a
sample of the top-scoring documents. Diversity settings are used to limit the
number of matches that share a common value such as an \\"author\\". [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-diversified-sampler-aggregation.html) 
\\"\\"\\"
input Elastic_AggsDiversifiedSampler_50 {
  shard_size: String = \\"100\\"
  field: String
  max_docs_per_value: Int
  script: Elastic_CommonsScript_50
  execution_hint: String
}

\\"\\"\\"
A multi-value metrics aggregation that computes stats over numeric values
extracted from the aggregated documents. These values can be extracted either
from specific numeric fields in the documents, or be generated by a provided script. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-extendedstats-aggregation.html) 
\\"\\"\\"
input Elastic_AggsExtendedStats_50 {
  field: String
  sigma: Float
  missing: Float
  script: Elastic_CommonsScript_50
}

\\"\\"\\"
A sibling pipeline aggregation which calculates a variety of stats across all
bucket of a specified metric in a sibling aggregation. The specified metric must
be numeric and the sibling aggregation must be a multi-bucket aggregation. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-extended-stats-bucket-aggregation.html) 
\\"\\"\\"
input Elastic_AggsExtendedStatsBucket_50 {
  buckets_path: String!
  gap_policy: String
  format: String
  sigma: Float
}

\\"\\"\\"
Defines a multi bucket aggregation where each bucket is associated with a
filter. Each bucket will collect all documents that match its associated filter. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-filters-aggregation.html) 
\\"\\"\\"
input Elastic_AggsFilters_50 {
  filters: JSON
  other_bucket: Boolean
  other_bucket_key: String
}

\\"\\"\\"
A metric aggregation that computes the bounding box containing all geo_point
values for a field. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-geobounds-aggregation.html) 
\\"\\"\\"
input Elastic_AggsGeoBounds_50 {
  field: String
  wrap_longitude: Boolean
}

\\"\\"\\"
A metric aggregation that computes the weighted centroid from all coordinate
values for a Geo-point datatype field. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-geocentroid-aggregation.html) 
\\"\\"\\"
input Elastic_AggsGeoCentroid_50 {
  field: String
}

\\"\\"\\"
A multi-bucket aggregation that works on geo_point fields. The user can define a
point of origin and a set of distance range buckets. The aggregation evaluate
the distance of each document value from the origin point and determines the
buckets it belongs to based on the ranges [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-geodistance-aggregation.html) 
\\"\\"\\"
input Elastic_AggsGeoDistance_50 {
  field: String
  origin: ElasticGeoPointType
  ranges: [Elastic_FloatRange_50]

  \\"\\"\\"
  By default, the distance unit is m (metres) but it can also accept: mi
  (miles), in (inches), yd (yards), km (kilometers), cm (centimeters), mm
  (millimeters). 
  \\"\\"\\"
  unit: String

  \\"\\"\\"
  \`sloppy_arc\` (the default) \`arc\` (most accurate) for very large areas like
  cross continent search. \`plane\` (fastest) for smaller geographical areas like
  cities or even countries. 
  \\"\\"\\"
  distance_type: String
}

\\"\\"\\"
A multi-bucket aggregation that works on geo_point fields and groups points into
buckets that represent cells in a grid. Each cell is labeled using a geohash
which is of user-definable precision. Geohashes can have a choice of precision
between 1 and 12. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-geohashgrid-aggregation.html) 
\\"\\"\\"
input Elastic_AggsGeohashGrid_50 {
  field: String
  precision: Int
  size: Int = 10000
  shard_size: Int
}

\\"\\"\\"
Defines a single bucket of all the documents within the search execution
context. This context is defined by the indices and the document types you’re
searching on, but is not influenced by the search query itself. Should have
empty body, without fields, eg. \`global: {}\` [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-global-aggregation.html) 
\\"\\"\\"
input Elastic_AggsGlobal_50 {
  _without_fields_: JSON
}

\\"\\"\\"
A multi-bucket values source based aggregation that can be applied on numeric
values extracted from the documents. It dynamically builds fixed size (a.k.a.
interval) buckets over the values. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-histogram-aggregation.html) 
\\"\\"\\"
input Elastic_AggsHistogram_50 {
  field: String
  interval: Float
  missing: Float
  min_doc_count: Int
  extended_bounds: Elastic_AggsHistogramBounds_50
  order: JSON
  offset: Int
  keyed: Boolean
}

input Elastic_AggsHistogramBounds_50 {
  min: Float
  max: Float
}

\\"\\"\\"
A range aggregation that is dedicated for IP values. Note that this aggregation
includes the \`from\` value and excludes the \`to\` value for each range. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-iprange-aggregation.html) 
\\"\\"\\"
input Elastic_AggsIpRange_50 {
  field: String
  ranges: [Elastic_IpRangeType_50]
}

\\"\\"\\"
A single-value metrics aggregation that keeps track and returns the maximum
value among the numeric values extracted from the aggregated documents. These
values can be extracted either from specific numeric fields in the documents, or
be generated by a provided script. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-max-aggregation.html) 
\\"\\"\\"
input Elastic_AggsMax_50 {
  field: String
  missing: Float
  script: Elastic_CommonsScript_50
}

\\"\\"\\"
A sibling pipeline aggregation which identifies the bucket(s) with the maximum
value of a specified metric in a sibling aggregation and outputs both the value
and the key(s) of the bucket(s). The specified metric must be numeric and the
sibling aggregation must be a multi-bucket aggregation. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-max-bucket-aggregation.html) 
\\"\\"\\"
input Elastic_AggsMaxBucket_50 {
  buckets_path: String!
  gap_policy: String
  format: String
}

\\"\\"\\"
A single-value metrics aggregation that keeps track and returns the minimum
value among the numeric values extracted from the aggregated documents. These
values can be extracted either from specific numeric fields in the documents, or
be generated by a provided script. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-min-aggregation.html) 
\\"\\"\\"
input Elastic_AggsMin_50 {
  field: String
  missing: Float
  script: Elastic_CommonsScript_50
}

\\"\\"\\"
A sibling pipeline aggregation which identifies the bucket(s) with the minimum
value of a specified metric in a sibling aggregation and outputs both the value
and the key(s) of the bucket(s). The specified metric must be numeric and the
sibling aggregation must be a multi-bucket aggregation. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-min-bucket-aggregation.html) 
\\"\\"\\"
input Elastic_AggsMinBucket_50 {
  buckets_path: String!
  gap_policy: String
  format: String
}

\\"\\"\\"
A field data based single bucket aggregation, that creates a bucket of all
documents in the current document set context that are missing a field value
(effectively, missing a field or having the configured NULL value set). [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-missing-aggregation.html) 
\\"\\"\\"
input Elastic_AggsMissing_50 {
  field: String
}

\\"\\"\\"
Given an ordered series of data, the Moving Average aggregation will slide a
window across the data and emit the average value of that window. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-movavg-aggregation.html) 
\\"\\"\\"
input Elastic_AggsMovingAverage_50 {
  buckets_path: String!
  format: String
  window: Int
  gap_policy: String
  model: String
  settings: JSON
}

\\"\\"\\"
A special single bucket aggregation that enables aggregating nested documents. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-nested-aggregation.html) 
\\"\\"\\"
input Elastic_AggsNested_50 {
  path: String
}

\\"\\"\\"
A multi-value metrics aggregation that calculates one or more percentile ranks
over numeric values extracted from the aggregated documents. These values can be
extracted either from specific numeric fields in the documents, or be generated
by a provided script. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-percentile-rank-aggregation.html) 
\\"\\"\\"
input Elastic_AggsPercentileRanks_50 {
  field: String
  values: [Float]
  hdr: Elastic_CommonsHDR_50
  missing: Float
  script: Elastic_CommonsScript_50
}

\\"\\"\\"
A multi-value metrics aggregation that calculates one or more percentiles over
numeric values extracted from the aggregated documents. These values can be
extracted either from specific numeric fields in the documents, or be generated
by a provided script. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-percentile-aggregation.html) 
\\"\\"\\"
input Elastic_AggsPercentiles_50 {
  field: String
  percents: [Float]
  tdigest: Elastic_AggsPercentilesTDigest_50
  hdr: Elastic_CommonsHDR_50
  missing: Float
  script: Elastic_CommonsScript_50
}

\\"\\"\\"
A sibling pipeline aggregation which calculates percentiles across all bucket of
a specified metric in a sibling aggregation. The specified metric must be
numeric and the sibling aggregation must be a multi-bucket aggregation. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-percentiles-bucket-aggregation.html) 
\\"\\"\\"
input Elastic_AggsPercentilesBucket_50 {
  buckets_path: String!
  gap_policy: String
  format: String
  percents: [Float]
}

input Elastic_AggsPercentilesTDigest_50 {
  compression: Int
}

\\"\\"\\"
A multi-bucket value source based aggregation that enables the user to define a
set of ranges - each representing a bucket. Note that this aggregation includes
the \`from\` value and excludes the \`to\` value for each range. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-range-aggregation.html) 
\\"\\"\\"
input Elastic_AggsRange_50 {
  field: String
  ranges: [Elastic_FloatRangeKeyed_50]
  keyed: Boolean
  script: Elastic_CommonsScript_50
}

\\"\\"\\"
A special single bucket aggregation that enables aggregating on parent docs from
nested documents. The \`reverse_nested\` aggregation must be defined inside a
\`nested\` aggregation. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-reverse-nested-aggregation.html) 
\\"\\"\\"
input Elastic_AggsReverseNested_50 {
  path: String
}

\\"\\"\\"
A filtering aggregation used to limit any sub aggregations' processing to a
sample of the top-scoring documents. Tightening the focus of analytics to
high-relevance matches rather than the potentially very long tail of low-quality
matches. This functionality is experimental and may be changed or removed completely. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-sampler-aggregation.html) 
\\"\\"\\"
input Elastic_AggsSampler_50 {
  shard_size: Int
}

\\"\\"\\"
A metric aggregation that executes using scripts to provide a metric output. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-scripted-metric-aggregation.html) 
\\"\\"\\"
input Elastic_AggsScriptedMetric_50 {
  init_script: Elastic_CommonsScript_50
  map_script: Elastic_CommonsScript_50
  combine_script: Elastic_CommonsScript_50
  reduce_script: Elastic_CommonsScript_50
  params: Elastic_AggsScriptedMetricParams_50
}

input Elastic_AggsScriptedMetricParams_50 {
  field: String
  _agg: JSON!
}

\\"\\"\\"
Serial differencing is a technique where values in a time series are subtracted
from itself at different time lags or periods. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-serialdiff-aggregation.html) 
\\"\\"\\"
input Elastic_AggsSerialDifferencing_50 {
  buckets_path: String!
  lag: String
  gap_policy: String
  format: String
}

\\"\\"\\"
An aggregation that returns interesting or unusual occurrences of terms in a
set. The significant_terms aggregation can be very heavy when run on large indices. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-significantterms-aggregation.html) 
\\"\\"\\"
input Elastic_AggsSignificantTerms_50 {
  field: String
  min_doc_count: Int
  background_filter: JSON
  execution_hint: String
}

\\"\\"\\"
A multi-value metrics aggregation that computes stats over numeric values
extracted from the aggregated documents. These values can be extracted either
from specific numeric fields in the documents, or be generated by a provided script. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-stats-aggregation.html) 
\\"\\"\\"
input Elastic_AggsStats_50 {
  field: String
  missing: Float
  script: Elastic_CommonsScript_50
}

\\"\\"\\"
A sibling pipeline aggregation which calculates a variety of stats across all
bucket of a specified metric in a sibling aggregation. The specified metric must
be numeric and the sibling aggregation must be a multi-bucket aggregation. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-stats-bucket-aggregation.html) 
\\"\\"\\"
input Elastic_AggsStatsBucket_50 {
  buckets_path: String!
  gap_policy: String
  format: String
}

\\"\\"\\"
A single-value metrics aggregation that sums up numeric values that are
extracted from the aggregated documents. These values can be extracted either
from specific numeric fields in the documents, or be generated by a provided script. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-sum-aggregation.html) 
\\"\\"\\"
input Elastic_AggsSum_50 {
  field: String
  missing: Float
  script: Elastic_CommonsScript_50
}

\\"\\"\\"
A sibling pipeline aggregation which calculates the sum across all bucket of a
specified metric in a sibling aggregation. The specified metric must be numeric
and the sibling aggregation must be a multi-bucket aggregation. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-sum-bucket-aggregation.html) 
\\"\\"\\"
input Elastic_AggsSumBucket_50 {
  buckets_path: String!
  gap_policy: String
  format: String
}

\\"\\"\\"
A multi-bucket value source based aggregation where buckets are dynamically
built - one per unique value. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-terms-aggregation.html) 
\\"\\"\\"
input Elastic_AggsTerms_50 {
  field: String
  size: Int = 10
  shard_size: Int
  order: JSON
  include: JSON
  exclude: JSON
  script: Elastic_CommonsScript_50
  execution_hint: String
  missing: JSON
}

\\"\\"\\"
A top_hits metric aggregator keeps track of the most relevant document being
aggregated. This aggregator is intended to be used as a sub aggregator, so that
the top matching documents can be aggregated per bucket. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-top-hits-aggregation.html#search-aggregations-metrics-top-hits-aggregation) 
\\"\\"\\"
input Elastic_AggsTopHits_50 {
  from: Int
  size: Int
  sort: JSON
  _source: JSON
}

\\"\\"\\"
A single-value metrics aggregation that counts the number of values that are
extracted from the aggregated documents. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-valuecount-aggregation.html) 
\\"\\"\\"
input Elastic_AggsValueCount_50 {
  field: String
  script: Elastic_CommonsScript_50
}

\\"\\"\\"
A High Dynamic Range (HDR) Histogram. [Documentation](https://github.com/HdrHistogram/HdrHistogram) 
\\"\\"\\"
input Elastic_CommonsHDR_50 {
  number_of_significant_value_digits: Int
}

\\"\\"\\"
The scripting module enables you to use scripts to evaluate custom expressions. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-scripting.html) 
\\"\\"\\"
input Elastic_CommonsScript_50 {
  lang: String!
  inline: String!
  params: JSON
  file: String
}

\\"\\"\\"Date range where \`from\` value includes and \`to\` value excludes.\\"\\"\\"
input Elastic_DateRange_50 {
  \\"\\"\\"
  The expression starts with an anchor date, which can either be now, or a date
  string ending with ||. Eg \`2015-01-01||+1M/d\` means 2015-01-01 plus one month,
  rounded down to the nearest day. Or \`now+1h+1m\`. The supported time units: y,
  M, w, d, h, m, s 
  \\"\\"\\"
  from: String

  \\"\\"\\"
  The expression starts with an anchor date, which can either be now, or a date
  string ending with ||. Eg \`2015-01-01||+1M/d\` means 2015-01-01 plus one month,
  rounded down to the nearest day. Or \`now+1h+1m\`. The supported time units: y,
  M, w, d, h, m, s 
  \\"\\"\\"
  to: String
}

\\"\\"\\"Float range where \`from\` value includes and \`to\` value excludes.\\"\\"\\"
input Elastic_FloatRange_50 {
  from: Float
  to: Float
}

\\"\\"\\"
Float range where \`from\` value includes and \`to\` value excludes and may have a key for aggregation. 
\\"\\"\\"
input Elastic_FloatRangeKeyed_50 {
  from: Float
  to: Float
  key: String
}

\\"\\"\\"Ip range where \`from\` value includes and \`to\` value excludes.\\"\\"\\"
input Elastic_IpRangeType_50 {
  from: String
  to: String

  \\"\\"\\"IP ranges can also be defined as CIDR masks 10.0.0.127/25\\"\\"\\"
  mask: String
}

\\"\\"\\"
Elasticsearch provides a full Query DSL based on JSON to define queries. [Query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html) 
\\"\\"\\"
input Elastic_Query_50 {
  match_all: Elastic_QueryMatchAll_50
  bool: Elastic_QueryBool_50
  constant_score: Elastic_QueryConstantScore_50
  dis_max: Elastic_QueryDisMax_50
  boosting: Elastic_QueryBoosting_50
  function_score: Elastic_QueryFunctionScore_50

  \\"\\"\\"
  Match Query accept text/numerics/dates, analyzes them, and constructs a query. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query.html) 
  \\"\\"\\"
  match: JSON

  \\"\\"\\"
  The match_phrase query analyzes the text and creates a phrase query out of the analyzed text. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query-phrase.html) 
  \\"\\"\\"
  match_phrase: JSON

  \\"\\"\\"
  The match_phrase_prefix is the same as match_phrase, except that it allows for
  prefix matches on the last term in the text. Eg \\"quick brown f\\" [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query-phrase-prefix.html) 
  \\"\\"\\"
  match_phrase_prefix: JSON
  multi_match: Elastic_QueryMultiMatch_50

  \\"\\"\\"
  The common terms query is a modern alternative to stopwords which improves the
  precision and recall of search results (by taking stopwords into account),
  without sacrificing performance. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-common-terms-query.html) 
  \\"\\"\\"
  common: JSON
  query_string: Elastic_QueryQueryString_50
  simple_query_string: Elastic_QuerySimpleQueryString_50
  exists: Elastic_QueryExists_50

  \\"\\"\\"
  The fuzzy query uses similarity based on Levenshtein edit distance. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-fuzzy-query.html) 
  \\"\\"\\"
  fuzzy: JSON
  ids: Elastic_QueryIds_50

  \\"\\"\\"
  Matches documents that have fields containing terms with a specified prefix
  (not analyzed). [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-prefix-query.html) 
  \\"\\"\\"
  prefix: JSON

  \\"\\"\\"
  Matches documents with fields that have terms within a certain range. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-range-query.html) 
  \\"\\"\\"
  range: JSON

  \\"\\"\\"
  The regexp query allows you to use regular expression term queries. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-regexp-query.html) 
  \\"\\"\\"
  regexp: JSON
  type: Elastic_QueryType_50

  \\"\\"\\"
  Find documents which contain the exact term specified in the field specified.
  { fieldName: value } or { fieldName: { value: value, boost: 2.0 } } [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-term-query.html) 
  \\"\\"\\"
  term: JSON

  \\"\\"\\"
  Filters documents that have fields that match any of the provided terms (not
  analyzed). { fieldName: [values] } [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-terms-query.html) 
  \\"\\"\\"
  terms: JSON

  \\"\\"\\"
  Matches documents that have fields matching a wildcard expression (not
  analyzed). In order to prevent extremely SLOW wildcard queries, term should
  not start from * or ?. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-wildcard-query.html) 
  \\"\\"\\"
  wildcard: JSON

  \\"\\"\\"
  A query allowing to filter hits based on a point location using a bounding
  box. Requires the geo_point Mapping. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-geo-bounding-box-query.html) 
  \\"\\"\\"
  geo_bounding_box: JSON

  \\"\\"\\"
  Filters documents that include only hits that exists within a specific
  distance from a geo point. Requires the geo_point Mapping. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-geo-distance-query.html) 
  \\"\\"\\"
  geo_distance: JSON

  \\"\\"\\"
  A query allowing to include hits that only fall within a polygon of points.
  Requires the geo_point Mapping. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-geo-polygon-query.html) 
  \\"\\"\\"
  geo_polygon: JSON

  \\"\\"\\"
  Filter documents indexed using the geo_shape type. Requires the geo_shape Mapping. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-geo-shape-query.html) 
  \\"\\"\\"
  geo_shape: JSON
  more_like_this: Elastic_QueryMoreLikeThis_50
  percolate: Elastic_QueryPercolate_50
  script: Elastic_QueryScript_50
  has_child: Elastic_QueryHasChild_50
  has_parent: Elastic_QueryHasParent_50
  nested: Elastic_QueryNested_50
  parent_id: Elastic_QueryParentId_50
}

\\"\\"\\"
A query that matches documents matching boolean combinations of other queries.
The bool query maps to Lucene BooleanQuery. It is built using one or more
boolean clauses, each clause with a typed occurrence. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-bool-query.html) 
\\"\\"\\"
input Elastic_QueryBool_50 {
  \\"\\"\\"
  The clause (query) must appear in matching documents and will contribute to the score. 
  \\"\\"\\"
  must: [Elastic_Query_50]

  \\"\\"\\"
  The clause (query) must appear in matching documents. However unlike must the
  score of the query will be ignored. Filter clauses are executed in filter
  context, meaning that scoring is ignored and clauses are considered for caching. 
  \\"\\"\\"
  filter: [Elastic_Query_50]

  \\"\\"\\"
  The clause (query) should appear in the matching document. In a boolean query
  with no must or filter clauses, one or more should clauses must match a
  document. The minimum number of should clauses to match can be set using the
  minimum_should_match parameter. 
  \\"\\"\\"
  should: [Elastic_Query_50]

  \\"\\"\\"The minimum number of should clauses to match. \\"\\"\\"
  minimum_should_match: String

  \\"\\"\\"
  The clause (query) must not appear in the matching documents. Clauses are
  executed in filter context meaning that scoring is ignored and clauses are
  considered for caching. Because scoring is ignored, a score of 0 for all
  documents is returned. 
  \\"\\"\\"
  must_not: [Elastic_Query_50]
  boost: Float
}

\\"\\"\\"
The boosting query can be used to effectively demote results that match a given query. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-boosting-query.html) 
\\"\\"\\"
input Elastic_QueryBoosting_50 {
  positive: Elastic_Query_50
  negative: Elastic_Query_50
  negative_boost: Float
}

\\"\\"\\"
A query that wraps another query and simply returns a constant score equal to
the query boost for every document in the filter. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-constant-score-query.html) 
\\"\\"\\"
input Elastic_QueryConstantScore_50 {
  filter: Elastic_Query_50!
  boost: Float!
}

\\"\\"\\"
A query that generates the union of documents produced by its subqueries, and
that scores each document with the maximum score for that document as produced
by any subquery, plus a tie breaking increment for any additional matching subqueries. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-dis-max-query.html) 
\\"\\"\\"
input Elastic_QueryDisMax_50 {
  queries: [Elastic_Query_50]
  boost: Float
  tie_breaker: Float
}

\\"\\"\\"
Returns documents that have at least one non-null value in the original field. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-exists-query.html) 
\\"\\"\\"
input Elastic_QueryExists_50 {
  field: String
}

\\"\\"\\"
The function_score allows you to modify the score of documents that are
retrieved by a query. This can be useful if, for example, a score function is
computationally expensive and it is sufficient to compute the score on a
filtered set of documents. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-function-score-query.html) 
\\"\\"\\"
input Elastic_QueryFunctionScore_50 {
  query: Elastic_Query_50
  boost: String

  \\"\\"\\"Can be: \`multiply\`, \`replace\`, \`sum\`, \`avg\`, \`max\`, \`min\`.\\"\\"\\"
  boost_mode: String
  random_score: Elastic_QueryFunctionScoreRandom_50
  functions: [Elastic_QueryFunctionScoreFunction_50]
  max_boost: Float

  \\"\\"\\"Can be: \`multiply\`, \`sum\`, \`avg\`, \`first\`, \`max\`, \`min\`.\\"\\"\\"
  score_mode: String
  min_score: Float
}

input Elastic_QueryFunctionScoreFunction_50 {
  filter: Elastic_Query_50
  random_score: Elastic_QueryFunctionScoreRandom_50
  weight: Float
  script_score: JSON
  field_value_factor: JSON
  gauss: JSON
  linear: JSON
  exp: JSON
}

input Elastic_QueryFunctionScoreRandom_50 {
  seed: Float
}

\\"\\"\\"
The has_child filter accepts a query and the child type to run against, and
results in parent documents that have child docs matching the query. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-has-child-query.html) 
\\"\\"\\"
input Elastic_QueryHasChild_50 {
  type: String
  query: Elastic_Query_50

  \\"\\"\\"Can be: \`avg\`, \`sum\`, \`max\`, \`min\`, \`none\`.\\"\\"\\"
  score_mode: String
  min_children: Int
  max_children: Int
}

\\"\\"\\"
The has_parent query accepts a query and a parent type. The query is executed in
the parent document space, which is specified by the parent type [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-has-parent-query.html) 
\\"\\"\\"
input Elastic_QueryHasParent_50 {
  parent_type: String
  query: Elastic_Query_50
  score: Boolean
  ignore_unmapped: Boolean
}

\\"\\"\\"
Filters documents that only have the provided ids. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-ids-query.html) 
\\"\\"\\"
input Elastic_QueryIds_50 {
  type: String!
  values: [String]!
}

\\"\\"\\"
The most simple query, which matches all documents, giving them all a _score of 1.0. 
\\"\\"\\"
input Elastic_QueryMatchAll_50 {
  boost: Float
}

\\"\\"\\"
The More Like This Query (MLT Query) finds documents that are \\"like\\" a given set of documents. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-mlt-query.html) 
\\"\\"\\"
input Elastic_QueryMoreLikeThis_50 {
  fields: [String]
  like: JSON
  unlike: JSON
  min_term_freq: Int
  max_query_terms: Int
  boost: Float
}

\\"\\"\\"
The multi_match query builds on the match query to allow multi-field queries. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-multi-match-query.html) 
\\"\\"\\"
input Elastic_QueryMultiMatch_50 {
  query: String!

  \\"\\"\\"
  Array of fields [ \\"title\\", \\"*_name\\", \\"subject^3\\" ]. You may use wildcards and boosting field. 
  \\"\\"\\"
  fields: [String]!
  type: Elastic_QueryMultiMatchTypeEnum_50
  operator: Elastic_QueryMultiMatchOperatorEnum_50
  minimum_should_match: String
  analyzer: String
  slop: Int
  boost: Float
  fuzziness: JSON
  prefix_length: Int
  max_expansions: Int
  rewrite: String
  zero_terms_query: JSON
  cutoff_frequency: Float
}

enum Elastic_QueryMultiMatchOperatorEnum_50 {
  and
  or
}

enum Elastic_QueryMultiMatchTypeEnum_50 {
  best_fields
  most_fields
  cross_fields
  phrase
  phrase_prefix
}

\\"\\"\\"
Nested query allows to query nested objects / docs. The query is executed
against the nested objects / docs as if they were indexed as separate docs. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-nested-query.html) 
\\"\\"\\"
input Elastic_QueryNested_50 {
  path: String

  \\"\\"\\"Can be: \`avg\`, \`sum\`, \`max\`, \`min\`, \`none\`.\\"\\"\\"
  score_mode: String
  query: Elastic_Query_50
}

\\"\\"\\"
The parent_id query can be used to find child documents which belong to a
particular parent. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-parent-id-query.html) 
\\"\\"\\"
input Elastic_QueryParentId_50 {
  type: String
  id: String
  ignore_unmapped: Boolean
}

\\"\\"\\"
The percolate query can be used to match queries stored in an index. The
percolate query itself contains the document that will be used as query to match
with the stored queries. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-percolate-query.html) 
\\"\\"\\"
input Elastic_QueryPercolate_50 {
  field: String
  document_type: String!
  document: JSON!
}

\\"\\"\\"
A query that uses a query parser in order to parse its content. Eg. \\"this AND
that OR thus\\" or \\"(content:this OR name:this) AND (content:that OR name:that)\\" [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html) 
\\"\\"\\"
input Elastic_QueryQueryString_50 {
  query: String!
  fields: [String]
  default_field: String
  default_operator: Elastic_QueryQueryStringOperatorEnum_50
  analyzer: String
  allow_leading_wildcard: Boolean
  enable_position_increments: Boolean
  fuzzy_max_expansions: Int
  fuzziness: String
  fuzzy_prefix_length: Int
  phrase_slop: Int
  boost: Float
  auto_generate_phrase_queries: Boolean
  analyze_wildcard: Boolean
  max_determinized_states: Int
  minimum_should_match: String
  lenient: Boolean
  time_zone: String
  quote_field_suffix: String
  split_on_whitespace: Boolean
  use_dis_max: Boolean
  tie_breaker: Int
}

enum Elastic_QueryQueryStringOperatorEnum_50 {
  and
  or
}

\\"\\"\\"
A query allowing to define scripts as queries. They are typically used in a
filter context. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-script-query.html) 
\\"\\"\\"
input Elastic_QueryScript_50 {
  script: Elastic_CommonsScript_50
}

\\"\\"\\"
A query that uses the SimpleQueryParser to parse its context. Unlike the regular
query_string query, the simple_query_string query will never throw an exception,
and discards invalid parts of the query. Eg. \\"this AND that OR thus\\" or
\\"(content:this OR name:this) AND (content:that OR name:that)\\" [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html) 
\\"\\"\\"
input Elastic_QuerySimpleQueryString_50 {
  query: String!
  fields: [String]
  default_operator: Elastic_QuerySimpleQueryStringOperatorEnum_50
  analyzer: String

  \\"\\"\\"
  Can provided several flags, eg \\"OR|AND|PREFIX\\". The available flags are: ALL,
  NONE, AND, OR, NOT, PREFIX, PHRASE, PRECEDENCE, ESCAPE, WHITESPACE, FUZZY,
  NEAR, and SLOP. 
  \\"\\"\\"
  flags: String
  analyze_wildcard: Boolean
  lenient: Boolean
  minimum_should_match: String
  quote_field_suffix: String
  boost: Float
}

enum Elastic_QuerySimpleQueryStringOperatorEnum_50 {
  and
  or
}

\\"\\"\\"
Filters documents matching the provided document / mapping type. [Documentation](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-type-query.html) 
\\"\\"\\"
input Elastic_QueryType_50 {
  value: String
}

\\"\\"\\"
Elastic Search GeoPoint Type. Object format: { \\"lat\\" : 52.3760, \\"lon\\" : 4.894 }.
String format (lat, lon): \\"52.3760, 4.894\\". Array GeoJson format (lat, lon):
[4.894, 52.3760] 
\\"\\"\\"
scalar ElasticGeoPointType

\\"\\"\\"
The \`JSON\` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
\\"\\"\\"
scalar JSON

type Query {
  search(body: [Elastic_AggBlock_50]): Int
}
"
`;
